package Cliente;

import Interface.InterfaceCliente;
import Interface.InterfaceServidor;
import Servidor.Jugador;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author lorena
 */
public class GUIPrincipal extends javax.swing.JFrame {

    private JLabel jLabel1;
    private JLabel jLabel2;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private InterfaceServidor implServ;
    private InterfaceServidor implCli;
    private String host;
    private String user;
    private String pass;
    private HiloGUI hiloPir;
    private String nombreSala = "";
    private boolean primero = false;
    private Integer value = 0;
    private int intCantidadCaze = 0;
    private int tamañoSala;
    private boolean habilitadoPuntuacion = false;
    private boolean esLanzado = false;
    private Integer valorCaze = 0;
    private boolean esFondoUsuario = false;
    private boolean regFondo = false;
    private Integer mayor = 0;
    private String userMayor = null;
    private boolean darSalida = true;

    /**
     * Creates new form GUIPrincipal
     */
    public GUIPrincipal() {
        initComponents();
        iniciarPortada();
        jDialogInicioSesion.setLocationRelativeTo(null);

        jDialogInicioSesion.setVisible(true);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogInicioSesion = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtFieldHost = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFieldUser = new javax.swing.JTextField();
        btnAceptarSesion = new javax.swing.JButton();
        btnCancelarInicioSesion = new javax.swing.JButton();
        txtFieldPass = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListJugadores = new javax.swing.JList();
        btnVolver = new javax.swing.JButton();
        btnJugar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbValorPirinola = new javax.swing.JLabel();
        btnGirarPirinola = new javax.swing.JButton();
        panelPuntuaciones = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPuntuaciones = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lbFondoSala = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbUsuario = new javax.swing.JLabel();

        jDialogInicioSesion.setAlwaysOnTop(true);
        jDialogInicioSesion.setMinimumSize(new java.awt.Dimension(479, 383));
        jDialogInicioSesion.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        jDialogInicioSesion.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogInicioSesion.setResizable(false);
        jDialogInicioSesion.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jDialogInicioSesionWindowClosing(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 5, -1, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubicación del servidor"));

        jLabel4.setText("Host server");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addGap(35, 35, 35)
                .addComponent(txtFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 21, -1, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Inicio de sesión"));

        jLabel3.setText("Usuario");

        jLabel5.setText("Contraseña");

        btnAceptarSesion.setText("Aceptar");
        btnAceptarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarSesionActionPerformed(evt);
            }
        });
        btnAceptarSesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAceptarSesionKeyPressed(evt);
            }
        });

        btnCancelarInicioSesion.setText("Cancelar");
        btnCancelarInicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarInicioSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFieldUser, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(txtFieldPass)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btnAceptarSesion)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarInicioSesion)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptarSesion)
                    .addComponent(btnCancelarInicioSesion))
                .addGap(29, 29, 29))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 107, 361, -1));

        jDialogInicioSesion.getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bienvenido al juego de la pirinola!!");
        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(784, 596));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setMinimumSize(new java.awt.Dimension(784, 596));
        jPanel1.setPreferredSize(new java.awt.Dimension(784, 596));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setViewportView(JListJugadores);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 146, 259));

        btnVolver.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        btnVolver.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/volver.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setToolTipText("¡Empieze a jugar!");
        btnVolver.setDoubleBuffered(true);
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel1.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, 129, 63));

        btnJugar.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        btnJugar.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/thumb_tomatodo.jpg"))); // NOI18N
        btnJugar.setText("Jugar");
        btnJugar.setToolTipText("¡Empieze a jugar!");
        btnJugar.setDoubleBuffered(true);
        btnJugar.setEnabled(false);
        btnJugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnJugarMouseEntered(evt);
            }
        });
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });
        jPanel1.add(btnJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 150, 63));

        jPanel6.setBackground(new java.awt.Color(207, 171, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        lbValorPirinola.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel6.add(lbValorPirinola, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 140, 120));

        btnGirarPirinola.setBackground(new java.awt.Color(232, 170, 170));
        btnGirarPirinola.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        btnGirarPirinola.setText("Gire la pirinola!");
        btnGirarPirinola.setEnabled(false);
        btnGirarPirinola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGirarPirinolaActionPerformed(evt);
            }
        });
        jPanel1.add(btnGirarPirinola, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 170, 60));

        panelPuntuaciones.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        panelPuntuaciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Puntuaciones"));

        tablaPuntuaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nickname", "Puntuación"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPuntuaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaPuntuaciones);

        jLabel6.setText("Dinero de la sala:");

        lbFondoSala.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        lbFondoSala.setText("0");

        jLabel7.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jLabel7.setText("$");

        javax.swing.GroupLayout panelPuntuacionesLayout = new javax.swing.GroupLayout(panelPuntuaciones);
        panelPuntuaciones.setLayout(panelPuntuacionesLayout);
        panelPuntuacionesLayout.setHorizontalGroup(
            panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPuntuacionesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38))
                    .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbFondoSala)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelPuntuacionesLayout.setVerticalGroup(
            panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPuntuacionesLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addGroup(panelPuntuacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbFondoSala)
                            .addComponent(jLabel7)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(panelPuntuaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 440, 160));

        lbUsuario.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        lbUsuario.setText("Bienvenido(a)");
        jPanel1.add(lbUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, 40));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed

        // TODO add your handling code here:
        MensajeJuego("Volver");
        if (darSalida == true) {
            try {
                implServ.AbandonarJuego(user);
                AccionVolver();
            } catch (RemoteException ex) {
                Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        try {
            // TODO add your handling code here:

            implServ.Jugar(nombreSala, true);
        } catch (RemoteException ex) {
            Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnJugarActionPerformed

    private void btnCancelarInicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarInicioSesionActionPerformed
        // TODO add your handling code here:
        jDialogInicioSesion.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_btnCancelarInicioSesionActionPerformed

    private void btnAceptarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarSesionActionPerformed

        // TODO add your handling code here:


        btnVolver.setVisible(false);
        btnJugar.setVisible(false);
        jScrollPane1.setVisible(false);
        JListJugadores.setVisible(false);
        btnGirarPirinola.setVisible(false);
        panelPuntuaciones.setVisible(false);
        jPanel6.setVisible(false);
        lbUsuario.setVisible(false);

        jDialogInicioSesion.setVisible(false);
        this.setVisible(true);



        host = txtFieldHost.getText();
        user = txtFieldUser.getText();
        pass = txtFieldPass.getText();





    }//GEN-LAST:event_btnAceptarSesionActionPerformed

    private void btnGirarPirinolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGirarPirinolaActionPerformed
        try {
            // TODO add your handling code here:
            implServ.GirarPirinola(user, nombreSala);
            esLanzado = true;
        } catch (RemoteException ex) {
            Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGirarPirinolaActionPerformed

    private void jDialogInicioSesionWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogInicioSesionWindowClosing
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jDialogInicioSesionWindowClosing

    private void btnAceptarSesionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAceptarSesionKeyPressed
        // TODO add your handling code here:
        this.btnAceptarSesionActionPerformed(null);
    }//GEN-LAST:event_btnAceptarSesionKeyPressed

    private void btnJugarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnJugarMouseEntered
        // TODO add your handling code here:
        btnJugar.setToolTipText("Anímese a jugar!!");
    }//GEN-LAST:event_btnJugarMouseEntered

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MensajeJuego("Volver");
        if (darSalida == false) {
            this.setVisible(true);
        } else {
            this.jDialogInicioSesionWindowClosing(null);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GUIPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList JListJugadores;
    private javax.swing.JButton btnAceptarSesion;
    private javax.swing.JButton btnCancelarInicioSesion;
    private javax.swing.JButton btnGirarPirinola;
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JDialog jDialogInicioSesion;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbFondoSala;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JLabel lbValorPirinola;
    private javax.swing.JPanel panelPuntuaciones;
    private javax.swing.JTable tablaPuntuaciones;
    private javax.swing.JTextField txtFieldHost;
    private javax.swing.JPasswordField txtFieldPass;
    private javax.swing.JTextField txtFieldUser;
    // End of variables declaration//GEN-END:variables

    private void iniciarPortada() {
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();


        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pirinola.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 82, -1, -1));

        jButton1.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addMouseListener(new java.awt.event.MouseListener() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                jButton1MouseClicked(e);
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(java.awt.event.MouseEvent e) {
                jButton1MouseEntered(e);
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 432, 96, 71));

        jButton2.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addMouseListener(new java.awt.event.MouseListener() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                jButton2MouseClicked(e);
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(java.awt.event.MouseEvent e) {
                jButton2MouseClicked(e);
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 432, 94, 71));

        jButton3.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addMouseListener(new java.awt.event.MouseListener() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                jButton3MouseClicked(e);
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(java.awt.event.MouseEvent e) {
                jButton3MouseEntered(e);
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 432, 94, 71));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Escoga la sala dónde jugar");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, -1));


        pack();
    }

    private void jButton1ActionPerformed(ActionEvent evt) {
        try {
            MostrarElementoJuego();
            implServ = (InterfaceServidor) Naming.lookup("rmi://" + host + ":1099/Chat");
            //implCli = (InterfaceCliente) Naming.lookup("rmi://" + host + ":1099/Chat");
            //nombreSala = "Sala 1";
            implServ.EntrarSala(nombreSala, user, pass, 0);

            hiloPir = new HiloGUI(this, user, nombreSala, implServ);
            hiloPir.start();



        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void jButton2ActionPerformed(ActionEvent evt) {
        this.jButton1ActionPerformed(null);
    }

    private void jButton3ActionPerformed(ActionEvent evt) {
        this.jButton1ActionPerformed(null);
    }

    private void jButton1MouseClicked(MouseEvent e) {
//        nombreSala = "Sala 1";
//        this.jButton1ActionPerformed(null);
    }

    private void jButton2MouseClicked(MouseEvent e) {
//        nombreSala = "Sala 2";
//        this.jButton1ActionPerformed(null);
    }

    private void jButton3MouseClicked(MouseEvent e) {
//        nombreSala = "Sala 3";
//        this.jButton1ActionPerformed(null);
    }

    private void jButton1MouseEntered(MouseEvent e) {
        nombreSala = "Sala 1";
    }

    private void jButton2MouseEntered(MouseEvent e) {
        nombreSala = "Sala 2";
    }

    private void jButton3MouseEntered(MouseEvent e) {
        nombreSala = "Sala 3";
    }

    private void MostrarElementoJuego() {
        //<editor-fold desc="Mostrar elementos del juego principal">
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);

        lbUsuario.setText("Bienvenido(a) " + user);
        lbUsuario.setVisible(true);
        jScrollPane1.setVisible(true);
        JListJugadores.setVisible(true);
        btnVolver.setVisible(true);
        btnJugar.setVisible(true);
        jPanel6.setVisible(false);
        btnGirarPirinola.setVisible(false);
        panelPuntuaciones.setVisible(false);
        //</editor-fold>
    }

    void MostrarLista(final ArrayList lista) {
        tamañoSala = lista.size();
        if (tamañoSala == 1) {
            if (habilitadoPuntuacion == true){
                JOptionPane.showMessageDialog(null, "Hay un solo jugador en la sala, se finalizará el juego.", "Información importante", JOptionPane.INFORMATION_MESSAGE);
                DeclararGanador();
                AccionVolver();
            }
            primero = true;
        } else if ((tamañoSala >= 2) && (primero == true)) {
            btnJugar.setEnabled(true);
        } else {
            btnJugar.setEnabled(false);
        }


        JListJugadores.setModel(new javax.swing.AbstractListModel() {

            @Override
            public int getSize() {
                return tamañoSala;
            }

            @Override
            public Object getElementAt(int i) {
                return lista.get(i);
            }
        });
    }

    void AutorizarJuego(boolean aut) {
        if (value == 0) {
            String Stvalue;
            if (primero == true) {
                Stvalue = JOptionPane.showInputDialog("Digite su cantidad inicial");
            } else {
                Stvalue = JOptionPane.showInputDialog("Te han invitado a jugar. Por eso debe digitar su cantidad inicial de fondo");
            }

            value = Integer.parseInt(Stvalue);
        }
        if (value != -1) {
            try {
                if (regFondo == false) {
                    regFondo = implServ.RegistrarFondoUsuario(value, user);
                }

                //<editor-fold desc="Cuando el usuario es el primero en la lista">
                if (primero == true && intCantidadCaze == 0) {
                    String cantidad_caze = JOptionPane.showInputDialog("Coloque la cantidad a cazar!!");
                    intCantidadCaze = Integer.parseInt(cantidad_caze);
                    if (intCantidadCaze != -1) {
                        implServ.RegistrarFondoJuego(nombreSala, tamañoSala * intCantidadCaze, intCantidadCaze);
                        btnGirarPirinola.setEnabled(true);
                    }
                }
                //</editor-fold>
                if (valorCaze != 0 && esFondoUsuario == false) {
                    esFondoUsuario = implServ.RegistrarFondoUsuario((valorCaze * (-1)), user);
                }

                //Parte de diseño
                btnGirarPirinola.setVisible(true);
                jPanel6.setVisible(true);
                panelPuntuaciones.setVisible(true);
                habilitadoPuntuacion = true;
                //
            } catch (RemoteException ex) {
                Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    void MostrarFondoJuego(Integer valorFondo) {
        if (habilitadoPuntuacion == true) {
            lbFondoSala.setText(valorFondo.toString());
            if (valorFondo == 0 && valorCaze != 0) {
                MensajeJuego("NoHayFondo");
            }
        }
    }

    void MostrarPuntuacionUsuarios(ArrayList listaUsuarios) {
        if (habilitadoPuntuacion == true) {
            Jugador jugador = null;

            for (int i = 0; i < listaUsuarios.size(); i++) {
                jugador = (Jugador) listaUsuarios.get(i);

                if ((jugador.getAcum() == 0) && valorCaze != 0) {
                    if (jugador.getUser().equals(user)) {
                        MensajeJuego("NoHayFondoUsuario");
                    }
                } else {
                    if (mayor < jugador.getAcum()) {
                        mayor = jugador.getAcum();
                        userMayor = jugador.getUser();
                    }

                }
                tablaPuntuaciones.setValueAt(jugador.getUser(), i, 0);
                tablaPuntuaciones.setValueAt(jugador.getAcum(), i, 1);
            }
        }
    }

    void MostrarPirinola(String[] listaPir) {
        if (!"".equals(listaPir[0])) {
            if (listaPir[0].equals(nombreSala) && !(listaPir[1].equals(lbValorPirinola.getText()))) {
                AccionPirinola(listaPir[1]);
                lbValorPirinola.setText(listaPir[1]);
                if (user.equals(listaPir[2])) {
                    btnGirarPirinola.setEnabled(true);
                } else {
                    btnGirarPirinola.setEnabled(false);
                }

                esLanzado = false;
            }
        }
    }

    void MostrarCaze(Integer caze) {
        valorCaze = caze;
    }

    private void AccionPirinola(String string) {//Esto lo que hace es realizar la accion que va a realizar de acuerdo al resultado de la pirinola
        switch (string) {
            case "Pon 1":
                if (esLanzado == true) {
                    try {
                        implServ.RegistrarFondoUsuario(-(valorCaze * 1), user);
                        implServ.RegistrarFondoJuego(nombreSala, valorCaze, valorCaze);
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            case "Pon 2":
                if (esLanzado == true) {
                    try {
                        implServ.RegistrarFondoUsuario(-(valorCaze * 2), user);
                        implServ.RegistrarFondoJuego(nombreSala, 2 * valorCaze, valorCaze);
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            case "Todos ponen":
                try {
                    implServ.RegistrarFondoUsuario(-(valorCaze * 1), user);

                    implServ.RegistrarFondoJuego(nombreSala, valorCaze, valorCaze);
                } catch (RemoteException ex) {
                    Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case "Toma 1":
                if (esLanzado == true) {
                    try {
                        implServ.RegistrarFondoUsuario(valorCaze, user);
                        implServ.RegistrarFondoJuego(nombreSala, -(valorCaze * 1), valorCaze);
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            case "Toma 2":
                if (esLanzado == true) {
                    try {
                        if ((Integer.parseInt(lbFondoSala.getText()) - (valorCaze * 2)) < 0) {
                            implServ.RegistrarFondoUsuario(valorCaze, user);
                            implServ.RegistrarFondoJuego(nombreSala, -(valorCaze), valorCaze);
                        } else {
                            implServ.RegistrarFondoUsuario(2 * valorCaze, user);
                            implServ.RegistrarFondoJuego(nombreSala, -(valorCaze * 2), valorCaze);
                        }
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            case "Toma todo":
                if (esLanzado == true) {
                    try {
                        implServ.RegistrarFondoUsuario(Integer.parseInt(lbFondoSala.getText()), user);
                        implServ.RegistrarFondoJuego(nombreSala, -(Integer.parseInt(lbFondoSala.getText())), valorCaze);
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        }
    }

    private void DeclararGanador() {
        try {
            
            implServ.SalirJuego(nombreSala);
            implServ.QuitarSala(nombreSala);
            implServ.AbandonarJuego(user);

            MensajeJuego("Ganador");
            habilitadoPuntuacion = false;
            lbValorPirinola.setText("");

            btnGirarPirinola.setVisible(false);
            jPanel6.setVisible(false);
            panelPuntuaciones.setVisible(false);
            lbFondoSala.setText("");
            mayor = 0;
            userMayor = null;
            value = 0;
            intCantidadCaze = 0;
            esLanzado = false;
            valorCaze = 0;
            esFondoUsuario = false;
            regFondo = false;
            darSalida = true;

        } catch (RemoteException ex) {
            Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void MensajeJuego(String val) {
        if (habilitadoPuntuacion == true) {
            if (val.equals("Volver")) {
                int confirmado = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea salir del juego?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (confirmado == JOptionPane.YES_OPTION) {
                    DeclararGanador();
                } else {
                    darSalida = false;
                }
            }

            if (val.equals("NoHayFondo")) {
                int opcionEscogida = JOptionPane.showConfirmDialog(null, "Ya no hay dinero en fondo, ¿desea seguir cazando?", "Atención", JOptionPane.YES_NO_OPTION);
                if (opcionEscogida == JOptionPane.YES_OPTION) {
                    try {

                        //Condicion para saber si hay un solo jugador en la sala
                        implServ.RegistrarFondoJuego(nombreSala, valorCaze, valorCaze);
                        implServ.RegistrarFondoUsuario((valorCaze * (-1)), user);

                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    DeclararGanador();
                    AccionVolver();
                }
            }

            if (val.equals("NoHayFondoUsuario")) {
                int opcionEscogida = JOptionPane.showConfirmDialog(null, "No tiene dinero para seguir apostando, ¿desea apostar más para seguir jugando?", "Atención", JOptionPane.YES_NO_OPTION);
                if (opcionEscogida == JOptionPane.YES_OPTION) {
                    try {
                        String Stvalue = JOptionPane.showInputDialog(null, "Digite su cantidad inicial");
                        value = Integer.parseInt(Stvalue);
                        implServ.RegistrarFondoUsuario(value, user);
                        implServ.RegistrarFondoJuego(nombreSala, valorCaze, valorCaze);
                    } catch (RemoteException ex) {
                        Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                    DeclararGanador();
                    AccionVolver();
                }
            }

            if (val.equals("Ganador")) {
                if (user.equals(userMayor)) {
                    JOptionPane.showMessageDialog(null, "Usted ha ganado!!", "Información importante", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Usted ha perdido!!", "Información importante", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }

    private void AccionVolver() {
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setVisible(true);
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            lbUsuario.setVisible(false);
            btnVolver.setVisible(false);
            btnJugar.setVisible(false);
            jScrollPane1.setVisible(false);
            primero = false;
            hiloPir.stop();
            
    }
}
